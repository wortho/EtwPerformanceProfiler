OBJECT Table 50000 Performance Profiler Events
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=Performance Profiler;
  }
  PROPERTIES
  {
    DataPerCompany=No;
  }
  FIELDS
  {
    { 1   ;   ;Id                  ;Integer        }
    { 2   ;   ;Session ID          ;Integer        }
    { 3   ;   ;Indentation         ;Integer        }
    { 4   ;   ;Object Type         ;Option        ;CaptionML=ENU=Object Type;
                                                   OptionCaptionML=ENU=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,Page,Query,System,FieldNumber,TableExtension,PageExtension;
                                                   OptionString=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,Page,Query,System,FieldNumber,TableExtension,PageExtension }
    { 5   ;   ;Object ID           ;Integer       ;TableRelation=Object.ID WHERE (Type=FIELD(Object Type));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Object ID }
    { 6   ;   ;Line No             ;Integer        }
    { 7   ;   ;Statement           ;Text250        }
    { 8   ;   ;Duration            ;Decimal        }
    { 9   ;   ;MinDuration         ;Decimal        }
    { 10  ;   ;MaxDuration         ;Decimal        }
    { 11  ;   ;LastActive          ;Decimal        }
    { 12  ;   ;HitCount            ;Integer        }
    { 13  ;   ;Total               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Performance Profiler Events".Duration WHERE (Indentation=CONST(0))) }
    { 14  ;   ;FullStatement       ;BLOB           }
  }
  KEYS
  {
    {    ;Id,Session ID                           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DeleteArchiveQst@1001 : TextConst 'ENU=Existing lines of the archived session %1 will be deleted. Do you want to continue?';
      CopyedToArchMsg@1000 : TextConst 'ENU=Data is archived with Session Code %1.';

    PROCEDURE CopyToArchive@1000(CurrSessionId@1001 : Integer);
    VAR
      ProfilerArchive@1002 : Record 50001;
      ProfilerEvent@1003 : Record 50000;
      ProfilerSessionArch@1004 : Record 50002;
      SessionCode@1005 : Code[20];
    BEGIN
      IF FindSessionCode(SessionCode) THEN BEGIN
        ProfilerEvent.RESET;
        ProfilerEvent.SETRANGE("Session ID",CurrSessionId);
        IF ProfilerEvent.FINDSET THEN BEGIN
          REPEAT
            ProfilerArchive.INIT;
            ProfilerArchive.TRANSFERFIELDS(ProfilerEvent);
            ProfilerArchive."Session Code" := SessionCode;
            ProfilerArchive.INSERT;
          UNTIL ProfilerEvent.NEXT = 0;
          MESSAGE(CopyedToArchMsg,SessionCode);
        END;
      END;
    END;

    LOCAL PROCEDURE FindSessionCode@1001(VAR SessionCode@1000 : Code[20]) : Boolean;
    VAR
      ProfilerSessionArch@1002 : Record 50002;
      PerfSessionArchived@1001 : Page 50002;
    BEGIN
      PerfSessionArchived.LOOKUPMODE(TRUE);
      IF PerfSessionArchived.RUNMODAL = ACTION::LookupOK THEN BEGIN
        PerfSessionArchived.GETRECORD(ProfilerSessionArch);
        ProfilerSessionArch.TESTFIELD(Code);
        SessionCode := ProfilerSessionArch.Code;

        EXIT(RemoveExistingArchLines(SessionCode));
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE RemoveExistingArchLines@1002(SessionCode@1000 : Code[20]) : Boolean;
    VAR
      ProfilerArchive@1001 : Record 50001;
    BEGIN
      ProfilerArchive.RESET;
      ProfilerArchive.SETRANGE("Session Code",SessionCode);
      IF NOT ProfilerArchive.ISEMPTY THEN BEGIN
        IF NOT CONFIRM(DeleteArchiveQst,FALSE,SessionCode) THEN
          EXIT(FALSE);
        ProfilerArchive.DELETEALL;
      END;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

